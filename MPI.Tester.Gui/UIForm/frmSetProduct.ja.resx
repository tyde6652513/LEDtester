<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblPassRateCheck.Text" xml:space="preserve">
    <value>歩留まり検査の設定</value>
  </data>
  <data name="lblPassRateCheckMinCount.Text" xml:space="preserve">
    <value>合計最小数</value>
  </data>
  <data name="chkPassRateFailAndStopZapESD.Text" xml:space="preserve">
    <value>歩留まり低下</value>
  </data>
  <data name="comboItem1.Text" xml:space="preserve">
    <value>値型式</value>
  </data>
  <data name="comboItem2.Text" xml:space="preserve">
    <value>勾配型式</value>
  </data>
  <data name="dataGridViewCheckBoxColumn3.HeaderText" xml:space="preserve">
    <value>有効にする</value>
  </data>
  <data name="dataGridViewTextBoxColumn5.HeaderText" xml:space="preserve">
    <value>名称</value>
  </data>
  <data name="dataGridViewIntegerInputColumn3.HeaderText" xml:space="preserve">
    <value>最低合格率(%)</value>
  </data>
  <data name="chkIsEnablePassRateCheck.Text" xml:space="preserve">
    <value>歩留まり検査を起動する</value>
  </data>
  <data name="value.Text" xml:space="preserve">
    <value>値型式</value>
  </data>
  <data name="gradient.Text" xml:space="preserve">
    <value>勾配型式</value>
  </data>
  <data name="lblSamplingMonitorMode.Text" xml:space="preserve">
    <value>モニターモード</value>
  </data>
  <data name="lblPreSamplingSetting.Text" xml:space="preserve">
    <value>サンプルモニター機能設定</value>
  </data>
  <data name="dataGridViewCheckBoxColumn2.HeaderText" xml:space="preserve">
    <value>有効にする</value>
  </data>
  <data name="dataGridViewTextBoxColumn3.HeaderText" xml:space="preserve">
    <value>名称</value>
  </data>
  <data name="dataGridViewIntegerInputColumn2.HeaderText" xml:space="preserve">
    <value>型式</value>
  </data>
  <data name="dataGridViewTextBoxColumn4.HeaderText" xml:space="preserve">
    <value>範囲</value>
  </data>
  <data name="chkIsAllPassChecking.Text" xml:space="preserve">
    <value>テスト結果値が規格に完全クリアすれば、合否選別を行う</value>
  </data>
  <data name="lblContinousSamplingMonitor.Text" xml:space="preserve">
    <value>連続チップのテスト結果が規格を超過した</value>
  </data>
  <data name="dataGridViewCheckBoxColumn1.HeaderText" xml:space="preserve">
    <value>有効にする</value>
  </data>
  <data name="dataGridViewTextBoxColumn1.HeaderText" xml:space="preserve">
    <value>名称</value>
  </data>
  <data name="Column3.HeaderText" xml:space="preserve">
    <value>最小値</value>
  </data>
  <data name="Column2.HeaderText" xml:space="preserve">
    <value>最大値</value>
  </data>
  <data name="dataGridViewIntegerInputColumn1.HeaderText" xml:space="preserve">
    <value>型式</value>
  </data>
  <data name="dataGridViewTextBoxColumn2.HeaderText" xml:space="preserve">
    <value>上端部</value>
  </data>
  <data name="Column1.HeaderText" xml:space="preserve">
    <value>下端部</value>
  </data>
  <data name="gbSortPageReTest.Text" xml:space="preserve">
    <value>サンプリング試験ページ並べ替え</value>
  </data>
  <data name="labelX3.Text" xml:space="preserve">
    <value>開始数</value>
  </data>
  <data name="labelX2.Text" xml:space="preserve">
    <value>終了数</value>
  </data>
  <data name="colMsrtItemEnable.HeaderText" xml:space="preserve">
    <value>有効にする</value>
  </data>
  <data name="colMsrtItemName.HeaderText" xml:space="preserve">
    <value>名称</value>
  </data>
  <data name="colMsrtItemMin.HeaderText" xml:space="preserve">
    <value>型式</value>
  </data>
  <data name="colMsrtItemMax.HeaderText" xml:space="preserve">
    <value>範囲</value>
  </data>
  <data name="lblChannelError.Text" xml:space="preserve">
    <value>チャンネルエラー警報設定</value>
  </data>
  <data name="labelX1.Text" xml:space="preserve">
    <value>"型式 0 = 値 , 型式 1 = ％"</value>
  </data>
  <data name="lblContinousErrorNumber.Text" xml:space="preserve">
    <value>連続NG数量</value>
  </data>
  <data name="lblAdjacentError.Text" xml:space="preserve">
    <value>アラーム：隣のチップのテスト結果差が大きすぎる。</value>
  </data>
  <data name="chkIsTVSTesting.Text" xml:space="preserve">
    <value>TVS試験(ツェナーダイオード）</value>
  </data>
  <data name="lblLopWLSkipCount.Text" xml:space="preserve">
    <value>LOPWLスキップ数</value>
  </data>
  <data name="btnWaferMapSetting.Text" xml:space="preserve">
    <value>ウェハマップ設定</value>
  </data>
  <data name="lblFilterPositionTitle.Text" xml:space="preserve">
    <value>フィルタ位置</value>
  </data>
  <data name="lblSpectrometerGroup.Text" xml:space="preserve">
    <value>他のパラメータ設定</value>
  </data>
  <data name="lblOpticalParamGroup.Text" xml:space="preserve">
    <value>光学テストのパラメータ設定</value>
  </data>
  <data name="lblElecParamGroup.Text" xml:space="preserve">
    <value>電的テストのパラメータ設定</value>
  </data>
  <data name="lblLopSaveItemTitle.Text" xml:space="preserve">
    <value>光度測定単位</value>
  </data>
  <data name="lblPolarityTitle.Text" xml:space="preserve">
    <value>電出力極性</value>
  </data>
  <data name="btnSave.Text" xml:space="preserve">
    <value>セーブ</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>グループボックス1</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Production</value>
  </data>
</root>